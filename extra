// Setup
Visual Studio code (https://code.visualstudio.com/) (Install)
NodeJs (https://nodejs.org/en/) (Install)
GitBash (https://git-scm.com/downloads) (Install)
Github (https://github.com/) (Create Account)
Follow (https://github.com/Aakashdeveloper)

Chrome
> https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh

extensions
> Vscode-icons
> TabNine
> Spell Check
> Git History
> Git Lens


NPM

FullStack Flipkart app
Template Forms
Reactive Forms

login logout (jwt)
Flipcart+login logout
Payment

Testing
Multilingual
Ang Material
LazyLoading

Deployment
> Github
> Jenkins
> AWS
> Heroku
> Netlify
> Angular over node server
> Angular over python server
> Docker 
> nginx

Dummy api

>>>>>>>>NO Covered<<<<<>>>>>
> HTML CSS JAVASCRIPT
> No Api Building (app,loginlogout)

/////////////////////
JSON > JavaScript Object Notation
[
    {
        "name":"John",
        "city":"Amsterdam"
    },
    {
        "name":"Amit",
        "city":"Oslo"
    },
    {
        "name":"Nikita",
        "city":"Stockholm",
        "language":"Swedish"
    }
]

/////////// 2,155,497
npm > Node Package manager

/////Package.json
> Starting point to app
> Command to start, test, build the app
> All the packages require for the app
> Meta Data (name,version,description)


////Step to generate package.json
**NodeJs must be installed in laptop
> Open the command prompt/terminal and navigate to the folder
> npm init
> Answer all questions
> type "yes"

////Step to install package////
**NodeJs must be installed in laptop
> Open the command prompt/terminal and navigate to the folder
> npm i packagename

> npm i packagename@5.9.0


/// Step to setup angular app in laptop

# window
* One time in laptop
> Open the cmd as administrator
> npm i -g @angular/cli

* Next every time you need new app
> open the command prompt
> Go inside the folder where you need app
> ng new appname

# Mac/linux
* One time in laptop
> Open terminal
> sudo npm i -g @angular/cli

* Next every time you need new app
> open the terminal
> Go inside the folder where you need app
> ng new appname



package-lock > it will contains the dependcy tree(child package versions)
node_modules > folder which have all the package we require
.gitignore > Avoid file to push into git
Readme.md > Detail description of the app in text format


//////////////
Angular
> Angular is a frontend framework that help to build single page applications
using component base structure


/// Step to run angular app
> Go inside the folder where app is present
> npm start
> http://localhost:4200

Package.json > Starting point to app
package-lock > it will contains the dependcy tree(child package versions)
node_modules > folder which have all the package we require
.gitignore > Avoid file to push into git
Readme.md > Detail description of the app in text format
tsconfig.json > this help to transpile configuration (convert into js)
tsconfig.app.json > this file have folder location for actual transpile
karams> Testing configuration
angular.json > this is the first file to run the app
             > Any common css/js
             > Which is the first .ts and .html
.editorconfig > to make same coding standards among developers
.browserlistrc > what all browser support we have

src>>>>>>>>>>>>>>>>
style.css > common css for the whole app
polyfills > make app compitable for IE
main.ts > this is the first .ts file that run
index.html > first .html file load in browser


let a = 10
let b = "Hi"
let c = true

a:number = 10
b:string = "Hii"
c:boolean = true


/////////////////////////////
package.json > angular.json > main.ts > app.module.ts > app.component.ts
                        ||
                        ||  Compile code into single html
                        \/
                    index.html (load on browser)

////Building Block/////
Modules >>>>> NgModule
> Parent of the app
> All block have to declare here

Component >>>>> Component
> HTML, Css, logics

Pipe >>>>> Pipe,Pipetransform
> Run time data manipulation

Services >>>>> Injectable
> To connect with external Agent
> Dependency Injection

Routing >>>>> NgModule
> To Navigate between the pages


Data Binding
One Way binding
> Data Binding {{}}
> Property Binding []
> Event Binding ()
Two Way binding [()]


//////////
ng g c cloths
ng generate component componentName


API

Page1
# Top strip > https://devflipapi.herokuapp.com/topstrip
# Cloths >  https://devflipapi.herokuapp.com/item/cloths?limit=5
# Mobiles > https://devflipapi.herokuapp.com/item/mobile?limit=5
# Watches > https://devflipapi.herokuapp.com/item/watches?limit=5
# Formals > https://devflipapi.herokuapp.com/item/formals?limit=5

Page 2(Listing)
# List of item on basis of category
# Cloths > https://devflipapi.herokuapp.com/item/cloths
# Mobiles > https://devflipapi.herokuapp.com/item/mobile
# Filter on Basis of Cost
> https://devflipapi.herokuapp.com/filter/price/bags?lcost=50&hcost=500
# Filter on Basis of StarRating
> https://devflipapi.herokuapp.com/filter/rating/cloths/2

Page3 (Details)
> https://devflipapi.herokuapp.com/item/cloths?itemId=12


structral directive
> *ngFor

////////
var a = "amSterDam"

a.charAt(0).toUpperCase()
'A'
a.slice(1)
'mSterDam'
a.slice(2)
'SterDam'
a.slice(1).toLowerCase()
'msterdam'
a.charAt(0).toUpperCase()+a.slice(1).toLowerCase()
'Amsterdam'

var a = "paRIs"
a.charAt(0).toUpperCase()+a.slice(1).toLowerCase()
'Paris'


parmas
> What we pass after /
> Params are complusory to define in routing
> If params are define than passing in route is manditory
> Should use for 1 or 2 values

queryparams
> What we pass after ?
> No need to define in routing
> optional
> Can be use for multiple values

var a = [0,1,2,3]
a.filter((data) => {return data*2})
[1,2,3]

var a = [2,56,34,76,12,45,27,34,86]
a.filter((data) => {return data>50})
[56, 76, 86]


*Filter only return those value for
which output or condition is true

var city = ["Amsterdam","Venice","Boston","London","Helsinki"]
city.indexOf('Amsterdam')
0
city.indexOf('Boston')
2
city.indexOf('Insburg')
-1
city.indexOf('Nice')
-1



var a = ['a',1,2,3]
var b = [2,4,5,'b']

a+b
'a,1,2,32,4,5,b'

a.concat(b)
['a', 1, 2, 3, 2, 4, 5, 'b']


@Input
> Parent to child
> Property Binding
@Output
> Child to parent
> Event Binding
(event emitter)

//zomato
(get) cityname >           https://zomatoajulypi.herokuapp.com/location
(get) restwrtcity >        https://zomatoajulypi.herokuapp.com/restaurant?stateId=1
(get) quickSearch>         https://zomatoajulypi.herokuapp.com/quicksearch

(get) onbasisofMeal >      https://zomatoajulypi.herokuapp.com/restaurant?mealtype_id=
(get) cuisinefilter >      https://zomatoajulypi.herokuapp.com/filter/4?cuisine=1
(get) costfilter >         https://zomatoajulypi.herokuapp.com/filter/1?hcost=1000&lcost=500

(get) restdetails >        http://zomatoajulypi.herokuapp.com/details/1
(get) menu >               https://zomatoajulypi.herokuapp.com/menu/1

(post) orderspage >        http://zomatoajulypi.herokuapp.com/menuItem
                           body [1,4,5]
(post)placeOrder >        

(get) allorder>            
       
(get) restaurants>         https://zomatoajulypi.herokuapp.com/restaurants
https://zomatoapi.onrender.com

https://developerpayment.herokuapp.com/paynow
https://paymentgatway.onrender.com

var city = ["Amsterdam","Venice","Boston","London","Helsinki"]
city.pop(2)
'Helsinki'

city.pop(1000000)
'London'

Learn JavaScript | MDN: https://developer.mozilla.org/en-US/Learn/JavaScript

A re-introduction to JavaScript | MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript

The Modern JavaScript Tutorial http://javascript.info/

JavaScript Garden: http://bonsaiden.github.io/JavaScript-Garden/

Eloquent JavaScript: http://eloquentjavascript.net/

Understanding ES6: https://leanpub.com/understandinges6/read

Learning Advanced JavaScript: http://ejohn.org/apps/learn/

/////////////////////
ng-dirty    ng-untouched   ng-valid
ng-pristen  ng-touched     ng-invalid

Dummy api
> npx json-server --watch employee.json --port 7900



/******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}

/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

https://developerjwt.onrender.com/


{range:true}